package org.socraticgrid.hl7.services.ucs.accessclients.ucsclient;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;

import org.socraticgrid.hl7.services.uc.exceptions.BadBodyException;
import org.socraticgrid.hl7.services.uc.exceptions.FeatureNotSupportedException;
import org.socraticgrid.hl7.services.uc.exceptions.InvalidContentException;
import org.socraticgrid.hl7.services.uc.exceptions.InvalidMessageException;
import org.socraticgrid.hl7.services.uc.exceptions.MissingBodyTypeException;
import org.socraticgrid.hl7.services.uc.exceptions.ProcessingException;
import org.socraticgrid.hl7.services.uc.exceptions.ServiceAdapterFaultException;
import org.socraticgrid.hl7.services.uc.exceptions.UndeliverableMessageException;
import org.socraticgrid.hl7.services.uc.model.Conversation;
import org.socraticgrid.hl7.services.uc.model.DeliveryAddress;
import org.socraticgrid.hl7.services.uc.model.Message;
import org.socraticgrid.hl7.services.uc.model.MessageModel;

/**
 * This class was generated by Apache CXF 2.7.8 2014-01-31T11:31:08.091-08:00
 * Generated source version: 2.7.8
 * 
 */
@WebService(targetNamespace = "org.socraticgrid.hl7.services.uc.clients", name = "ucsclient")
// @XmlSeeAlso({ObjectFactory.class,
// org.socraticgrid.hl7.services.uc.exceptions.ObjectFactory.class,
// org.socraticgrid.hl7.services.uc.model.ObjectFactory.class})
public interface UCSClientServiceSEI {

	@WebMethod
	public boolean callReady(
			@WebParam(name = "conversation") Conversation conversation,
			@WebParam(name = "callHandle") String callHandle,
			@WebParam(name = "serverId") String serverId);

	@WebMethod
	public <T extends Message> boolean handleException(
			@WebParam(name = "messageModel") MessageModel<T> messageModel,
			@WebParam(name = "sender") DeliveryAddress sender,
			@WebParam(name = "receiver") DeliveryAddress receiver,
			@WebParam(name = "exp") ProcessingException exp,
			@WebParam(name = "serverId") String serverId);

	@WebMethod
	public <T extends Message> boolean handleNotification(
			@WebParam(name = "messageModel") MessageModel<T> messageModel,
			@WebParam(name = "serverId") String serverId);

	@WebMethod
	public <T extends Message> MessageModel<T> handleResponse(
			@WebParam(name = "messageModel") MessageModel<T> messageModel,
			@WebParam(name = "serverId") String serverId)
			throws InvalidMessageException, InvalidContentException,
			MissingBodyTypeException, BadBodyException,
			ServiceAdapterFaultException, UndeliverableMessageException,
			FeatureNotSupportedException;

	@WebMethod
	public <T extends Message> boolean receiveMessage(
			@WebParam(name = "messageModel") MessageModel<T> messageModel,
			@WebParam(name = "serverId") String serverId);

}
